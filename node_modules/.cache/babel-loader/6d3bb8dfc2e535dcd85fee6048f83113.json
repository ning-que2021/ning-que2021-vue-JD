{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"\",\n\n  data() {\n    return {\n      keyword: ''\n    };\n  },\n\n  computed: {\n    userName() {\n      return this.$store.state.user.userInfo.name;\n    }\n\n  },\n\n  mounted() {\n    this.$bus.$on('clear', () => {\n      this.keyword = '';\n    });\n  },\n\n  methods: {\n    goSearch() {\n      //路由传参：\n      //第一种：字符串形式\n      //this.$router.push('/search/' + this.keyword+'?k='+this.keyword.toUpperCase())\n      //第二种：模板字符串\n      //this.$router.push(`/search/${this.keyword}?k=${this.keyword.toUpperCase()}`)\n      //第三种：对象写法\n      // this.$router.push({name:'search',params:{keyword:this.keyword || undefined}})\n      if (this.$route.query) {\n        let location = {\n          name: 'search',\n          params: {\n            keyword: this.keyword || undefined\n          }\n        };\n        location.query = this.$route.query;\n        this.$router.push(location);\n      }\n    },\n\n    //退出登录\n    async logout() {\n      try {\n        await this.$store.dispatch('userLogout');\n      } catch (error) {\n        alert(error.message);\n      }\n    }\n\n  }\n};","map":null,"metadata":{},"sourceType":"module"}