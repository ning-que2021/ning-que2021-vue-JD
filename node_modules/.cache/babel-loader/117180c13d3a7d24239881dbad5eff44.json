{"ast":null,"code":"import _objectSpread from \"D:/my-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.search.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.string.split.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport SearchSelector from './SearchSelector';\nimport { mapGetters, mapState } from \"vuex\";\nexport default {\n  name: 'Search',\n  data: function data() {\n    return {\n      //带给服务器的参数\n      searchParams: {\n        //一级分类id\n        category1Id: \"\",\n        category2Id: \"\",\n        category3Id: \"\",\n        //分类名字\n        categoryName: \"\",\n        //关键字\n        keyword: \"\",\n        //排序\n        order: \"1:desc\",\n        //分页器参数\n        pageNo: 1,\n        //每一页展示数据的个数\n        pageSize: 5,\n        //平台售卖属性的参数\n        props: [],\n        //品牌\n        trademark: \"\"\n      }\n    };\n  },\n  beforeMount: function beforeMount() {\n    //合并参数\n    Object.assign(this.searchParams, this.$route.query, this.$route.params);\n  },\n  mounted: function mounted() {\n    this.getData();\n  },\n  components: {\n    SearchSelector: SearchSelector\n  },\n  computed: _objectSpread(_objectSpread(_objectSpread({}, mapGetters(['goodList'])), mapState({\n    total: function total(start) {\n      return start.search.searchList.total;\n    }\n  })), {}, {\n    isOne: function isOne() {\n      return this.searchParams.order.indexOf('1') !== -1;\n    },\n    isTwo: function isTwo() {\n      return this.searchParams.order.indexOf('2') !== -1;\n    },\n    isAsc: function isAsc() {\n      return this.searchParams.order.indexOf('asc') !== -1;\n    },\n    isDesc: function isDesc() {\n      return this.searchParams.order.indexOf('desc') !== -1;\n    }\n  }),\n  watch: {\n    $route: function $route(newValue, oldValue) {\n      Object.assign(this.searchParams, this.$route.query, this.$route.params);\n      this.getData();\n      this.searchParams.category1Id = '';\n      this.searchParams.category2Id = '';\n      this.searchParams.category3Id = '';\n    }\n  },\n  methods: {\n    getData: function getData() {\n      this.$store.dispatch('getSearchList', this.searchParams);\n    },\n    removeCategoryName: function removeCategoryName() {\n      this.searchParams.categoryName = undefined;\n      this.searchParams.category1Id = undefined;\n      this.searchParams.category2Id = undefined;\n      this.searchParams.category3Id = undefined;\n      this.getData();\n\n      if (this.$route.params) {\n        this.$router.push({\n          name: 'search',\n          params: this.$route.params\n        });\n      }\n    },\n    removeKeywordName: function removeKeywordName() {\n      this.searchParams.keyword = undefined;\n      this.getData(); //通知兄弟组件Header清除关键字\n\n      this.$bus.$emit('clear');\n\n      if (this.$route.query) {\n        this.$router.push({\n          name: 'search',\n          query: this.$route.query\n        });\n      }\n    },\n    removeTrademarkName: function removeTrademarkName() {\n      this.searchParams.trademark = undefined;\n      this.getData();\n    },\n    removeattrValueName: function removeattrValueName(index) {\n      this.searchParams.props.splice(index, 1);\n      this.getData();\n    },\n    //自定义事件回调\n    tradeMarkInfo: function tradeMarkInfo(trademark) {\n      //console.log(trademark)\n      //整理参数\n      this.searchParams.trademark = \"\".concat(trademark.tmId, \":\").concat(trademark.tmName);\n      this.getData();\n    },\n    attrInfo: function attrInfo(attrs, attr) {\n      //console.log(attrs, attr);\n      var props = \"\".concat(attrs.attrId, \":\").concat(attr, \":\").concat(attrs.attrName);\n      if (this.searchParams.props.indexOf(props) == -1) this.searchParams.props.push(props);\n      this.getData();\n    },\n    changeOrder: function changeOrder(flag) {\n      //flag形参，他是一个标记\n      //获取最开始的状态\n      var originOrder = this.searchParams.order;\n      var originFlag = this.searchParams.order.split(':')[0];\n      var originSort = this.searchParams.order.split(':')[1];\n      var newOrder = ''; //点击的是综合\n\n      if (flag === originFlag) {\n        newOrder = \"\".concat(originFlag, \":\").concat(originSort === 'desc' ? 'asc' : 'desc');\n      } else {\n        //点击的是价格\n        newOrder = \"\".concat(flag, \":\", 'desc');\n      } //修改参数\n\n\n      this.searchParams.order = newOrder;\n      this.getData();\n    },\n    //自定义事件的回调函数，，获取当前第几页\n    getPageNo: function getPageNo(pageNo) {\n      //整理带给服务器的参数\n      this.searchParams.pageNo = pageNo;\n      this.getData();\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}