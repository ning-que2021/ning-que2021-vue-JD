{"ast":null,"code":"require(\"core-js/modules/es.array.slice.js\");\n\nrequire(\"core-js/modules/es.regexp.constructor.js\");\n\nrequire(\"core-js/modules/es.regexp.dot-all.js\");\n\nrequire(\"core-js/modules/es.regexp.exec.js\");\n\nrequire(\"core-js/modules/es.regexp.sticky.js\");\n\nrequire(\"core-js/modules/es.regexp.to-string.js\");\n\nrequire(\"core-js/modules/es.array.join.js\");\n\nrequire(\"core-js/modules/es.string.replace.js\");\n\nrequire(\"core-js/modules/es.regexp.test.js\");\n\n/*\n    ## Date\n*/\nvar patternLetters = {\n  yyyy: 'getFullYear',\n  yy: function yy(date) {\n    return ('' + date.getFullYear()).slice(2);\n  },\n  y: 'yy',\n  MM: function MM(date) {\n    var m = date.getMonth() + 1;\n    return m < 10 ? '0' + m : m;\n  },\n  M: function M(date) {\n    return date.getMonth() + 1;\n  },\n  dd: function dd(date) {\n    var d = date.getDate();\n    return d < 10 ? '0' + d : d;\n  },\n  d: 'getDate',\n  HH: function HH(date) {\n    var h = date.getHours();\n    return h < 10 ? '0' + h : h;\n  },\n  H: 'getHours',\n  hh: function hh(date) {\n    var h = date.getHours() % 12;\n    return h < 10 ? '0' + h : h;\n  },\n  h: function h(date) {\n    return date.getHours() % 12;\n  },\n  mm: function mm(date) {\n    var m = date.getMinutes();\n    return m < 10 ? '0' + m : m;\n  },\n  m: 'getMinutes',\n  ss: function ss(date) {\n    var s = date.getSeconds();\n    return s < 10 ? '0' + s : s;\n  },\n  s: 'getSeconds',\n  SS: function SS(date) {\n    var ms = date.getMilliseconds();\n    return ms < 10 && '00' + ms || ms < 100 && '0' + ms || ms;\n  },\n  S: 'getMilliseconds',\n  A: function A(date) {\n    return date.getHours() < 12 ? 'AM' : 'PM';\n  },\n  a: function a(date) {\n    return date.getHours() < 12 ? 'am' : 'pm';\n  },\n  T: 'getTime'\n};\nmodule.exports = {\n  // 日期占位符集合。\n  _patternLetters: patternLetters,\n  // 日期占位符正则。\n  _rformat: new RegExp(function () {\n    var re = [];\n\n    for (var i in patternLetters) {\n      re.push(i);\n    }\n\n    return '(' + re.join('|') + ')';\n  }(), 'g'),\n  // 格式化日期。\n  _formatDate: function _formatDate(date, format) {\n    return format.replace(this._rformat, function creatNewSubString($0, flag) {\n      return typeof patternLetters[flag] === 'function' ? patternLetters[flag](date) : patternLetters[flag] in patternLetters ? creatNewSubString($0, patternLetters[flag]) : date[patternLetters[flag]]();\n    });\n  },\n  // 生成一个随机的 Date 对象。\n  _randomDate: function _randomDate(min, max) {\n    // min, max\n    min = min === undefined ? new Date(0) : min;\n    max = max === undefined ? new Date() : max;\n    return new Date(Math.random() * (max.getTime() - min.getTime()));\n  },\n  // 返回一个随机的日期字符串。\n  date: function date(format) {\n    format = format || 'yyyy-MM-dd';\n    return this._formatDate(this._randomDate(), format);\n  },\n  // 返回一个随机的时间字符串。\n  time: function time(format) {\n    format = format || 'HH:mm:ss';\n    return this._formatDate(this._randomDate(), format);\n  },\n  // 返回一个随机的日期和时间字符串。\n  datetime: function datetime(format) {\n    format = format || 'yyyy-MM-dd HH:mm:ss';\n    return this._formatDate(this._randomDate(), format);\n  },\n  // 返回当前的日期和时间字符串。\n  now: function now(unit, format) {\n    // now(unit) now(format)\n    if (arguments.length === 1) {\n      // now(format)\n      if (!/year|month|day|hour|minute|second|week/.test(unit)) {\n        format = unit;\n        unit = '';\n      }\n    }\n\n    unit = (unit || '').toLowerCase();\n    format = format || 'yyyy-MM-dd HH:mm:ss';\n    var date = new Date();\n    /* jshint -W086 */\n    // 参考自 http://momentjs.cn/docs/#/manipulating/start-of/\n\n    switch (unit) {\n      case 'year':\n        date.setMonth(0);\n\n      case 'month':\n        date.setDate(1);\n\n      case 'week':\n      case 'day':\n        date.setHours(0);\n\n      case 'hour':\n        date.setMinutes(0);\n\n      case 'minute':\n        date.setSeconds(0);\n\n      case 'second':\n        date.setMilliseconds(0);\n    }\n\n    switch (unit) {\n      case 'week':\n        date.setDate(date.getDate() - date.getDay());\n    }\n\n    return this._formatDate(date, format);\n  }\n};","map":{"version":3,"sources":["D:/my-app/node_modules/mockjs/src/mock/random/date.js"],"names":["patternLetters","yyyy","yy","date","getFullYear","slice","y","MM","m","getMonth","M","dd","d","getDate","HH","h","getHours","H","hh","mm","getMinutes","ss","s","getSeconds","SS","ms","getMilliseconds","S","A","a","T","module","exports","_patternLetters","_rformat","RegExp","re","i","push","join","_formatDate","format","replace","creatNewSubString","$0","flag","_randomDate","min","max","undefined","Date","Math","random","getTime","time","datetime","now","unit","arguments","length","test","toLowerCase","setMonth","setDate","setHours","setMinutes","setSeconds","setMilliseconds","getDay"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA,IAAIA,cAAc,GAAG;AACjBC,EAAAA,IAAI,EAAE,aADW;AAEjBC,EAAAA,EAAE,EAAE,YAASC,IAAT,EAAe;AACf,WAAO,CAAC,KAAKA,IAAI,CAACC,WAAL,EAAN,EAA0BC,KAA1B,CAAgC,CAAhC,CAAP;AACH,GAJgB;AAKjBC,EAAAA,CAAC,EAAE,IALc;AAOjBC,EAAAA,EAAE,EAAE,YAASJ,IAAT,EAAe;AACf,QAAIK,CAAC,GAAGL,IAAI,CAACM,QAAL,KAAkB,CAA1B;AACA,WAAOD,CAAC,GAAG,EAAJ,GAAS,MAAMA,CAAf,GAAmBA,CAA1B;AACH,GAVgB;AAWjBE,EAAAA,CAAC,EAAE,WAASP,IAAT,EAAe;AACd,WAAOA,IAAI,CAACM,QAAL,KAAkB,CAAzB;AACH,GAbgB;AAejBE,EAAAA,EAAE,EAAE,YAASR,IAAT,EAAe;AACf,QAAIS,CAAC,GAAGT,IAAI,CAACU,OAAL,EAAR;AACA,WAAOD,CAAC,GAAG,EAAJ,GAAS,MAAMA,CAAf,GAAmBA,CAA1B;AACH,GAlBgB;AAmBjBA,EAAAA,CAAC,EAAE,SAnBc;AAqBjBE,EAAAA,EAAE,EAAE,YAASX,IAAT,EAAe;AACf,QAAIY,CAAC,GAAGZ,IAAI,CAACa,QAAL,EAAR;AACA,WAAOD,CAAC,GAAG,EAAJ,GAAS,MAAMA,CAAf,GAAmBA,CAA1B;AACH,GAxBgB;AAyBjBE,EAAAA,CAAC,EAAE,UAzBc;AA0BjBC,EAAAA,EAAE,EAAE,YAASf,IAAT,EAAe;AACf,QAAIY,CAAC,GAAGZ,IAAI,CAACa,QAAL,KAAkB,EAA1B;AACA,WAAOD,CAAC,GAAG,EAAJ,GAAS,MAAMA,CAAf,GAAmBA,CAA1B;AACH,GA7BgB;AA8BjBA,EAAAA,CAAC,EAAE,WAASZ,IAAT,EAAe;AACd,WAAOA,IAAI,CAACa,QAAL,KAAkB,EAAzB;AACH,GAhCgB;AAkCjBG,EAAAA,EAAE,EAAE,YAAShB,IAAT,EAAe;AACf,QAAIK,CAAC,GAAGL,IAAI,CAACiB,UAAL,EAAR;AACA,WAAOZ,CAAC,GAAG,EAAJ,GAAS,MAAMA,CAAf,GAAmBA,CAA1B;AACH,GArCgB;AAsCjBA,EAAAA,CAAC,EAAE,YAtCc;AAwCjBa,EAAAA,EAAE,EAAE,YAASlB,IAAT,EAAe;AACf,QAAImB,CAAC,GAAGnB,IAAI,CAACoB,UAAL,EAAR;AACA,WAAOD,CAAC,GAAG,EAAJ,GAAS,MAAMA,CAAf,GAAmBA,CAA1B;AACH,GA3CgB;AA4CjBA,EAAAA,CAAC,EAAE,YA5Cc;AA8CjBE,EAAAA,EAAE,EAAE,YAASrB,IAAT,EAAe;AACf,QAAIsB,EAAE,GAAGtB,IAAI,CAACuB,eAAL,EAAT;AACA,WAAOD,EAAE,GAAG,EAAL,IAAW,OAAOA,EAAlB,IAAwBA,EAAE,GAAG,GAAL,IAAY,MAAMA,EAA1C,IAAgDA,EAAvD;AACH,GAjDgB;AAkDjBE,EAAAA,CAAC,EAAE,iBAlDc;AAoDjBC,EAAAA,CAAC,EAAE,WAASzB,IAAT,EAAe;AACd,WAAOA,IAAI,CAACa,QAAL,KAAkB,EAAlB,GAAuB,IAAvB,GAA8B,IAArC;AACH,GAtDgB;AAuDjBa,EAAAA,CAAC,EAAE,WAAS1B,IAAT,EAAe;AACd,WAAOA,IAAI,CAACa,QAAL,KAAkB,EAAlB,GAAuB,IAAvB,GAA8B,IAArC;AACH,GAzDgB;AA0DjBc,EAAAA,CAAC,EAAE;AA1Dc,CAArB;AA4DAC,MAAM,CAACC,OAAP,GAAiB;AACb;AACAC,EAAAA,eAAe,EAAEjC,cAFJ;AAGb;AACAkC,EAAAA,QAAQ,EAAE,IAAIC,MAAJ,CAAY,YAAW;AAC7B,QAAIC,EAAE,GAAG,EAAT;;AACA,SAAK,IAAIC,CAAT,IAAcrC,cAAd;AAA8BoC,MAAAA,EAAE,CAACE,IAAH,CAAQD,CAAR;AAA9B;;AACA,WAAO,MAAMD,EAAE,CAACG,IAAH,CAAQ,GAAR,CAAN,GAAqB,GAA5B;AACH,GAJoB,EAAX,EAIJ,GAJI,CAJG;AASb;AACAC,EAAAA,WAAW,EAAE,qBAASrC,IAAT,EAAesC,MAAf,EAAuB;AAChC,WAAOA,MAAM,CAACC,OAAP,CAAe,KAAKR,QAApB,EAA8B,SAASS,iBAAT,CAA2BC,EAA3B,EAA+BC,IAA/B,EAAqC;AACtE,aAAO,OAAO7C,cAAc,CAAC6C,IAAD,CAArB,KAAgC,UAAhC,GAA6C7C,cAAc,CAAC6C,IAAD,CAAd,CAAqB1C,IAArB,CAA7C,GACHH,cAAc,CAAC6C,IAAD,CAAd,IAAwB7C,cAAxB,GAAyC2C,iBAAiB,CAACC,EAAD,EAAK5C,cAAc,CAAC6C,IAAD,CAAnB,CAA1D,GACA1C,IAAI,CAACH,cAAc,CAAC6C,IAAD,CAAf,CAAJ,EAFJ;AAGH,KAJM,CAAP;AAKH,GAhBY;AAiBb;AACAC,EAAAA,WAAW,EAAE,qBAASC,GAAT,EAAcC,GAAd,EAAmB;AAAE;AAC9BD,IAAAA,GAAG,GAAGA,GAAG,KAAKE,SAAR,GAAoB,IAAIC,IAAJ,CAAS,CAAT,CAApB,GAAkCH,GAAxC;AACAC,IAAAA,GAAG,GAAGA,GAAG,KAAKC,SAAR,GAAoB,IAAIC,IAAJ,EAApB,GAAiCF,GAAvC;AACA,WAAO,IAAIE,IAAJ,CAASC,IAAI,CAACC,MAAL,MAAiBJ,GAAG,CAACK,OAAJ,KAAgBN,GAAG,CAACM,OAAJ,EAAjC,CAAT,CAAP;AACH,GAtBY;AAuBb;AACAlD,EAAAA,IAAI,EAAE,cAASsC,MAAT,EAAiB;AACnBA,IAAAA,MAAM,GAAGA,MAAM,IAAI,YAAnB;AACA,WAAO,KAAKD,WAAL,CAAiB,KAAKM,WAAL,EAAjB,EAAqCL,MAArC,CAAP;AACH,GA3BY;AA4Bb;AACAa,EAAAA,IAAI,EAAE,cAASb,MAAT,EAAiB;AACnBA,IAAAA,MAAM,GAAGA,MAAM,IAAI,UAAnB;AACA,WAAO,KAAKD,WAAL,CAAiB,KAAKM,WAAL,EAAjB,EAAqCL,MAArC,CAAP;AACH,GAhCY;AAiCb;AACAc,EAAAA,QAAQ,EAAE,kBAASd,MAAT,EAAiB;AACvBA,IAAAA,MAAM,GAAGA,MAAM,IAAI,qBAAnB;AACA,WAAO,KAAKD,WAAL,CAAiB,KAAKM,WAAL,EAAjB,EAAqCL,MAArC,CAAP;AACH,GArCY;AAsCb;AACAe,EAAAA,GAAG,EAAE,aAASC,IAAT,EAAehB,MAAf,EAAuB;AACxB;AACA,QAAIiB,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA4B;AACxB;AACA,UAAI,CAAC,yCAAyCC,IAAzC,CAA8CH,IAA9C,CAAL,EAA0D;AACtDhB,QAAAA,MAAM,GAAGgB,IAAT;AACAA,QAAAA,IAAI,GAAG,EAAP;AACH;AACJ;;AACDA,IAAAA,IAAI,GAAG,CAACA,IAAI,IAAI,EAAT,EAAaI,WAAb,EAAP;AACApB,IAAAA,MAAM,GAAGA,MAAM,IAAI,qBAAnB;AAEA,QAAItC,IAAI,GAAG,IAAI+C,IAAJ,EAAX;AAEA;AACA;;AACA,YAAQO,IAAR;AACI,WAAK,MAAL;AACItD,QAAAA,IAAI,CAAC2D,QAAL,CAAc,CAAd;;AACJ,WAAK,OAAL;AACI3D,QAAAA,IAAI,CAAC4D,OAAL,CAAa,CAAb;;AACJ,WAAK,MAAL;AACA,WAAK,KAAL;AACI5D,QAAAA,IAAI,CAAC6D,QAAL,CAAc,CAAd;;AACJ,WAAK,MAAL;AACI7D,QAAAA,IAAI,CAAC8D,UAAL,CAAgB,CAAhB;;AACJ,WAAK,QAAL;AACI9D,QAAAA,IAAI,CAAC+D,UAAL,CAAgB,CAAhB;;AACJ,WAAK,QAAL;AACI/D,QAAAA,IAAI,CAACgE,eAAL,CAAqB,CAArB;AAbR;;AAeA,YAAQV,IAAR;AACI,WAAK,MAAL;AACItD,QAAAA,IAAI,CAAC4D,OAAL,CAAa5D,IAAI,CAACU,OAAL,KAAiBV,IAAI,CAACiE,MAAL,EAA9B;AAFR;;AAKA,WAAO,KAAK5B,WAAL,CAAiBrC,IAAjB,EAAuBsC,MAAvB,CAAP;AACH;AA5EY,CAAjB","sourcesContent":["/*\n    ## Date\n*/\nvar patternLetters = {\n    yyyy: 'getFullYear',\n    yy: function(date) {\n        return ('' + date.getFullYear()).slice(2)\n    },\n    y: 'yy',\n\n    MM: function(date) {\n        var m = date.getMonth() + 1\n        return m < 10 ? '0' + m : m\n    },\n    M: function(date) {\n        return date.getMonth() + 1\n    },\n\n    dd: function(date) {\n        var d = date.getDate()\n        return d < 10 ? '0' + d : d\n    },\n    d: 'getDate',\n\n    HH: function(date) {\n        var h = date.getHours()\n        return h < 10 ? '0' + h : h\n    },\n    H: 'getHours',\n    hh: function(date) {\n        var h = date.getHours() % 12\n        return h < 10 ? '0' + h : h\n    },\n    h: function(date) {\n        return date.getHours() % 12\n    },\n\n    mm: function(date) {\n        var m = date.getMinutes()\n        return m < 10 ? '0' + m : m\n    },\n    m: 'getMinutes',\n\n    ss: function(date) {\n        var s = date.getSeconds()\n        return s < 10 ? '0' + s : s\n    },\n    s: 'getSeconds',\n\n    SS: function(date) {\n        var ms = date.getMilliseconds()\n        return ms < 10 && '00' + ms || ms < 100 && '0' + ms || ms\n    },\n    S: 'getMilliseconds',\n\n    A: function(date) {\n        return date.getHours() < 12 ? 'AM' : 'PM'\n    },\n    a: function(date) {\n        return date.getHours() < 12 ? 'am' : 'pm'\n    },\n    T: 'getTime'\n}\nmodule.exports = {\n    // 日期占位符集合。\n    _patternLetters: patternLetters,\n    // 日期占位符正则。\n    _rformat: new RegExp((function() {\n        var re = []\n        for (var i in patternLetters) re.push(i)\n        return '(' + re.join('|') + ')'\n    })(), 'g'),\n    // 格式化日期。\n    _formatDate: function(date, format) {\n        return format.replace(this._rformat, function creatNewSubString($0, flag) {\n            return typeof patternLetters[flag] === 'function' ? patternLetters[flag](date) :\n                patternLetters[flag] in patternLetters ? creatNewSubString($0, patternLetters[flag]) :\n                date[patternLetters[flag]]()\n        })\n    },\n    // 生成一个随机的 Date 对象。\n    _randomDate: function(min, max) { // min, max\n        min = min === undefined ? new Date(0) : min\n        max = max === undefined ? new Date() : max\n        return new Date(Math.random() * (max.getTime() - min.getTime()))\n    },\n    // 返回一个随机的日期字符串。\n    date: function(format) {\n        format = format || 'yyyy-MM-dd'\n        return this._formatDate(this._randomDate(), format)\n    },\n    // 返回一个随机的时间字符串。\n    time: function(format) {\n        format = format || 'HH:mm:ss'\n        return this._formatDate(this._randomDate(), format)\n    },\n    // 返回一个随机的日期和时间字符串。\n    datetime: function(format) {\n        format = format || 'yyyy-MM-dd HH:mm:ss'\n        return this._formatDate(this._randomDate(), format)\n    },\n    // 返回当前的日期和时间字符串。\n    now: function(unit, format) {\n        // now(unit) now(format)\n        if (arguments.length === 1) {\n            // now(format)\n            if (!/year|month|day|hour|minute|second|week/.test(unit)) {\n                format = unit\n                unit = ''\n            }\n        }\n        unit = (unit || '').toLowerCase()\n        format = format || 'yyyy-MM-dd HH:mm:ss'\n\n        var date = new Date()\n\n        /* jshint -W086 */\n        // 参考自 http://momentjs.cn/docs/#/manipulating/start-of/\n        switch (unit) {\n            case 'year':\n                date.setMonth(0)\n            case 'month':\n                date.setDate(1)\n            case 'week':\n            case 'day':\n                date.setHours(0)\n            case 'hour':\n                date.setMinutes(0)\n            case 'minute':\n                date.setSeconds(0)\n            case 'second':\n                date.setMilliseconds(0)\n        }\n        switch (unit) {\n            case 'week':\n                date.setDate(date.getDate() - date.getDay())\n        }\n\n        return this._formatDate(date, format)\n    }\n}"]},"metadata":{},"sourceType":"script"}