{"ast":null,"code":"import _asyncToGenerator from \"D:/my-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport { reqGoodsInfo } from \"../../api\";\nvar state = {\n  goodInfo: {}\n};\nvar mutations = {\n  GETGOODINFO: function GETGOODINFO(state, goodInfo) {\n    state.goodInfo = goodInfo;\n  }\n};\nvar actions = {\n  getGoodInfo: function getGoodInfo(_ref, skuId) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return reqGoodsInfo(skuId);\n\n            case 3:\n              result = _context.sent;\n\n              //console.log(result.data.data);\n              if (result.status === 200) {\n                commit('GETGOODINFO', result.data.data);\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  }\n};\nvar getters = {\n  categoryView: function categoryView(state) {\n    return state.goodInfo.categoryView || {};\n  },\n  skuInfo: function skuInfo(state) {\n    return state.goodInfo.skuInfo || {};\n  },\n  spuSaleAttrList: function spuSaleAttrList(state) {\n    return state.goodInfo.spuSaleAttrList || {};\n  }\n};\nexport default {\n  state: state,\n  mutations: mutations,\n  actions: actions,\n  getters: getters\n};","map":{"version":3,"sources":["D:/my-app/src/store/detail/index.js"],"names":["reqGoodsInfo","state","goodInfo","mutations","GETGOODINFO","actions","getGoodInfo","skuId","commit","result","status","data","getters","categoryView","skuInfo","spuSaleAttrList"],"mappings":";;AAAA,SAAQA,YAAR,QAA2B,WAA3B;AAIA,IAAMC,KAAK,GAAG;AACZC,EAAAA,QAAQ,EAAC;AADG,CAAd;AAIA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,WADgB,uBACJH,KADI,EACEC,QADF,EACW;AACzBD,IAAAA,KAAK,CAACC,QAAN,GAAiBA,QAAjB;AACD;AAHe,CAAlB;AAMA,IAAMG,OAAO,GAAG;AACRC,EAAAA,WADQ,6BACaC,KADb,EACmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAdC,cAAAA,MAAc,QAAdA,MAAc;AAAA;AAAA,qBACZR,YAAY,CAACO,KAAD,CADA;;AAAA;AAC3BE,cAAAA,MAD2B;;AAE/B;AACA,kBAAIA,MAAM,CAACC,MAAP,KAAgB,GAApB,EAAwB;AACtBF,gBAAAA,MAAM,CAAC,aAAD,EAAeC,MAAM,CAACE,IAAP,CAAYA,IAA3B,CAAN;AACD;;AAL8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMhC;AAPa,CAAhB;AAWA,IAAMC,OAAO,GAAG;AACdC,EAAAA,YADc,wBACDZ,KADC,EACK;AACjB,WAAOA,KAAK,CAACC,QAAN,CAAeW,YAAf,IAA+B,EAAtC;AACD,GAHa;AAIdC,EAAAA,OAJc,mBAINb,KAJM,EAIA;AACZ,WAAOA,KAAK,CAACC,QAAN,CAAeY,OAAf,IAA0B,EAAjC;AACD,GANa;AAOdC,EAAAA,eAPc,2BAOEd,KAPF,EAOQ;AACpB,WAAOA,KAAK,CAACC,QAAN,CAAea,eAAf,IAAkC,EAAzC;AACD;AATa,CAAhB;AAYA,eAAe;AACbd,EAAAA,KAAK,EAALA,KADa;AAEbE,EAAAA,SAAS,EAATA,SAFa;AAGbE,EAAAA,OAAO,EAAPA,OAHa;AAIbO,EAAAA,OAAO,EAAPA;AAJa,CAAf","sourcesContent":["import {reqGoodsInfo} from \"../../api\";\r\n\r\n\r\n\r\nconst state = {\r\n  goodInfo:{}\r\n}\r\n\r\nconst mutations = {\r\n  GETGOODINFO(state,goodInfo){\r\n    state.goodInfo = goodInfo\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  async getGoodInfo({commit},skuId){\r\n    let result = await reqGoodsInfo(skuId);\r\n    //console.log(result.data.data);\r\n    if (result.status===200){\r\n      commit('GETGOODINFO',result.data.data)\r\n    }\r\n  }\r\n\r\n}\r\n\r\nconst getters = {\r\n  categoryView(state){\r\n    return state.goodInfo.categoryView || {};\r\n  },\r\n  skuInfo(state){\r\n    return state.goodInfo.skuInfo || {};\r\n  },\r\n  spuSaleAttrList(state){\r\n    return state.goodInfo.spuSaleAttrList || {}\r\n  }\r\n}\r\n\r\nexport default {\r\n  state,\r\n  mutations,\r\n  actions,\r\n  getters\r\n}"]},"metadata":{},"sourceType":"module"}