{"ast":null,"code":"import _asyncToGenerator from \"D:/my-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.error.cause.js\";\n//登录与注册的模块\nimport { reqGetCode, reqUserRegister, reqUserLogin, reqUserInfo, reqLogout } from \"@/api\";\nimport { setToken, getToken, removeToken } from \"../../utils/token\";\nvar state = {\n  code: '',\n  token: getToken(),\n  userInfo: {}\n};\nvar mutations = {\n  GETCODE: function GETCODE(state, code) {\n    state.code = code;\n  },\n  USERLOGIN: function USERLOGIN(state, token) {\n    state.token = token;\n  },\n  GETUSERINFO: function GETUSERINFO(state, userInfo) {\n    state.userInfo = userInfo;\n  },\n  CLEAR: function CLEAR(state) {\n    state.token = '';\n    state.userInfo = '';\n    removeToken();\n  }\n};\nvar actions = {\n  getCode: function getCode(_ref, phone) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return reqGetCode(phone);\n\n            case 3:\n              result = _context.sent;\n              console.log(result.data.data);\n\n              if (!(result.data.code == 200)) {\n                _context.next = 10;\n                break;\n              }\n\n              commit('GETCODE', result.data.data);\n              return _context.abrupt(\"return\", 'ok');\n\n            case 10:\n              return _context.abrupt(\"return\", Promise.reject(new Error('faile')));\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  //用户注册\n  userRegister: function userRegister(_ref2, user) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit;\n              _context2.next = 3;\n              return reqUserRegister(user);\n\n            case 3:\n              result = _context2.sent;\n\n              if (!(result.data.code == 200)) {\n                _context2.next = 8;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", 'ok');\n\n            case 8:\n              return _context2.abrupt(\"return\", Promise.reject(new Error('faile')));\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  },\n  //登录【token】\n  userLogin: function userLogin(_ref3, data) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              commit = _ref3.commit;\n              _context3.next = 3;\n              return reqUserLogin(data);\n\n            case 3:\n              result = _context3.sent;\n\n              if (!(result.data.code == 200)) {\n                _context3.next = 10;\n                break;\n              }\n\n              commit('USERLOGIN', result.data.data.token); //持久化存储token\n\n              setToken(result.data.data.token);\n              return _context3.abrupt(\"return\", 'ok');\n\n            case 10:\n              return _context3.abrupt(\"return\", Promise.reject(new Error('faile')));\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))();\n  },\n  //获取用户信息\n  getUserInfo: function getUserInfo(_ref4) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              commit = _ref4.commit;\n              _context4.next = 3;\n              return reqUserInfo();\n\n            case 3:\n              result = _context4.sent;\n\n              if (!(result.data.code == 200)) {\n                _context4.next = 9;\n                break;\n              }\n\n              commit('GETUSERINFO', result.data.data);\n              return _context4.abrupt(\"return\", 'ok');\n\n            case 9:\n              return _context4.abrupt(\"return\", Promise.reject(new Error('faile')));\n\n            case 10:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }))();\n  },\n  //退出登录\n  userLogout: function userLogout(_ref5) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              commit = _ref5.commit;\n              _context5.next = 3;\n              return reqLogout();\n\n            case 3:\n              result = _context5.sent;\n\n              if (result.data.code == 200) {\n                commit('CLEAR', result.data.data);\n              }\n\n            case 5:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }))();\n  }\n};\nvar getters = {};\nexport default {\n  state: state,\n  mutations: mutations,\n  actions: actions,\n  getters: getters\n};","map":{"version":3,"sources":["D:/my-app/src/store/user/index.js"],"names":["reqGetCode","reqUserRegister","reqUserLogin","reqUserInfo","reqLogout","setToken","getToken","removeToken","state","code","token","userInfo","mutations","GETCODE","USERLOGIN","GETUSERINFO","CLEAR","actions","getCode","phone","commit","result","console","log","data","Promise","reject","Error","userRegister","user","userLogin","getUserInfo","userLogout","getters"],"mappings":"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","sourcesContent":["//登录与注册的模块\r\nimport {reqGetCode, reqUserRegister, reqUserLogin, reqUserInfo,reqLogout} from \"@/api\";\r\nimport {setToken,getToken,removeToken} from \"../../utils/token\";\r\n\r\n\r\nconst state = {\r\n  code: '',\r\n  token:getToken(),\r\n  userInfo:{}\r\n};\r\n\r\nconst mutations = {\r\n  GETCODE(state, code) {\r\n    state.code = code\r\n  },\r\n  USERLOGIN(state,token){\r\n    state.token = token\r\n  },\r\n  GETUSERINFO(state,userInfo){\r\n    state.userInfo = userInfo\r\n  },\r\n  CLEAR(state){\r\n    state.token = '';\r\n    state.userInfo = '';\r\n    \r\n    removeToken()\r\n  }\r\n};\r\n\r\nconst actions = {\r\n  async getCode({commit}, phone) {\r\n    let result = await reqGetCode(phone);\r\n    console.log(result.data.data);\r\n    if (result.data.code == 200) {\r\n      commit('GETCODE', result.data.data);\r\n      return 'ok'\r\n    } else {\r\n      return Promise.reject(new Error('faile'))\r\n    }\r\n  },\r\n  //用户注册\r\n  async userRegister({commit},user){\r\n    let result = await reqUserRegister(user);\r\n    //console.log(result);\r\n    if (result.data.code == 200){\r\n      return 'ok'\r\n    }else {\r\n      return Promise.reject(new Error('faile'))\r\n    }\r\n  },\r\n  //登录【token】\r\n  async userLogin({commit},data){\r\n    let result = await reqUserLogin(data);\r\n    //console.log(result.data);\r\n    if (result.data.code==200){\r\n      commit('USERLOGIN',result.data.data.token);\r\n      //持久化存储token\r\n      setToken(result.data.data.token)\r\n      return 'ok'\r\n    }else {\r\n      return Promise.reject(new Error('faile'))\r\n    }\r\n  },\r\n  //获取用户信息\r\n  async getUserInfo({commit}){\r\n    let result = await reqUserInfo();\r\n    //console.log(result);\r\n    if (result.data.code==200){\r\n      commit('GETUSERINFO',result.data.data)\r\n      return 'ok'\r\n    }else {\r\n      return Promise.reject(new Error('faile'))\r\n    }\r\n  },\r\n  //退出登录\r\n  async userLogout({commit}){\r\n    let result = await reqLogout();\r\n    if (result.data.code==200){\r\n      commit('CLEAR',result.data.data)\r\n    }\r\n  }\r\n};\r\n\r\n\r\nconst getters = {};\r\n\r\nexport default {\r\n  state,\r\n  mutations,\r\n  actions,\r\n  getters\r\n}"]},"metadata":{},"sourceType":"module"}