{"ast":null,"code":"import _asyncToGenerator from \"D:/my-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\n//小仓库\nimport { reqCategoryList, reqBannerList, reqFloorList, reqGetSearchInfo } from \"../../api\";\nvar state = {\n  categoryList: [],\n  bannerList: [],\n  floorList: []\n};\nvar mutations = {\n  CATEGORYLIST: function CATEGORYLIST(state, categoryList) {\n    state.categoryList = categoryList; //console.log(state.categoryList);\n  },\n  GETBANNERLIST: function GETBANNERLIST(state, bannerList) {\n    state.bannerList = bannerList;\n  },\n  GETFLOORLIST: function GETFLOORLIST(state, floorList) {\n    state.floorList = floorList;\n  }\n};\nvar actions = {\n  categoryList: function categoryList(_ref) {\n    var _arguments = arguments;\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var commit, params, result;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              params = _arguments.length > 1 && _arguments[1] !== undefined ? _arguments[1] : {};\n              _context.next = 4;\n              return reqGetSearchInfo(params);\n\n            case 4:\n              result = _context.sent;\n              console.log(result);\n\n              if (result.status == 200) {\n                commit('CATEGORYLIST', result.data.data);\n              }\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  //获取首页轮播图数据\n  getBannerList: function getBannerList(_ref2) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit;\n              _context2.next = 3;\n              return reqBannerList();\n\n            case 3:\n              result = _context2.sent;\n\n              //console.log(result);\n              if (result.status == 200) {\n                commit('GETBANNERLIST', result.data.data);\n              }\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  },\n  //获取floor数据\n  getFloorList: function getFloorList(_ref3) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              commit = _ref3.commit;\n              _context3.next = 3;\n              return reqFloorList();\n\n            case 3:\n              result = _context3.sent;\n\n              if (result.status == 200) {\n                commit('GETFLOORLIST', result.data.data);\n              }\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))();\n  }\n};\nvar getters = {};\nexport default {\n  state: state,\n  mutations: mutations,\n  actions: actions,\n  getters: getters\n};","map":{"version":3,"sources":["D:/my-app/src/store/home/index.js"],"names":["reqCategoryList","reqBannerList","reqFloorList","reqGetSearchInfo","state","categoryList","bannerList","floorList","mutations","CATEGORYLIST","GETBANNERLIST","GETFLOORLIST","actions","commit","params","result","console","log","status","data","getBannerList","getFloorList","getters"],"mappings":";;AAAA;AACA,SAAQA,eAAR,EAAyBC,aAAzB,EAAwCC,YAAxC,EAAsDC,gBAAtD,QAA6E,WAA7E;AAEA,IAAMC,KAAK,GAAE;AACXC,EAAAA,YAAY,EAAC,EADF;AAEXC,EAAAA,UAAU,EAAC,EAFA;AAGXC,EAAAA,SAAS,EAAC;AAHC,CAAb;AAKA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,YADgB,wBACHL,KADG,EACGC,YADH,EACgB;AAC9BD,IAAAA,KAAK,CAACC,YAAN,GAAqBA,YAArB,CAD8B,CAE9B;AACD,GAJe;AAKhBK,EAAAA,aALgB,yBAKFN,KALE,EAKIE,UALJ,EAKe;AAC7BF,IAAAA,KAAK,CAACE,UAAN,GAAmBA,UAAnB;AACD,GAPe;AAQhBK,EAAAA,YARgB,wBAQHP,KARG,EAQGG,SARH,EAQa;AAC3BH,IAAAA,KAAK,CAACG,SAAN,GAAkBA,SAAlB;AACD;AAVe,CAAlB;AAYA,IAAMK,OAAO,GAAG;AACRP,EAAAA,YADQ,8BACwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAlBQ,cAAAA,MAAkB,QAAlBA,MAAkB;AAAVC,cAAAA,MAAU,0EAAH,EAAG;AAAA;AAAA,qBACjBX,gBAAgB,CAACW,MAAD,CADC;;AAAA;AAChCC,cAAAA,MADgC;AAEpCC,cAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,kBAAIA,MAAM,CAACG,MAAP,IAAe,GAAnB,EAAuB;AACrBL,gBAAAA,MAAM,CAAC,cAAD,EAAgBE,MAAM,CAACI,IAAP,CAAYA,IAA5B,CAAN;AACD;;AALmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMrC,GAPa;AAQd;AACMC,EAAAA,aATQ,gCASe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAARP,cAAAA,MAAQ,SAARA,MAAQ;AAAA;AAAA,qBACRZ,aAAa,EADL;;AAAA;AACvBc,cAAAA,MADuB;;AAE3B;AACA,kBAAIA,MAAM,CAACG,MAAP,IAAiB,GAArB,EAAyB;AACvBL,gBAAAA,MAAM,CAAC,eAAD,EAAiBE,MAAM,CAACI,IAAP,CAAYA,IAA7B,CAAN;AACD;;AAL0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAM5B,GAfa;AAgBd;AACME,EAAAA,YAjBQ,+BAiBc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAARR,cAAAA,MAAQ,SAARA,MAAQ;AAAA;AAAA,qBACPX,YAAY,EADL;;AAAA;AACtBa,cAAAA,MADsB;;AAE1B,kBAAIA,MAAM,CAACG,MAAP,IAAiB,GAArB,EAAyB;AACvBL,gBAAAA,MAAM,CAAC,cAAD,EAAgBE,MAAM,CAACI,IAAP,CAAYA,IAA5B,CAAN;AACD;;AAJyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAK3B;AAtBa,CAAhB;AAwBA,IAAMG,OAAO,GAAG,EAAhB;AACA,eAAe;AACblB,EAAAA,KAAK,EAALA,KADa;AAEbI,EAAAA,SAAS,EAATA,SAFa;AAGbI,EAAAA,OAAO,EAAPA,OAHa;AAIbU,EAAAA,OAAO,EAAPA;AAJa,CAAf","sourcesContent":["//小仓库\r\nimport {reqCategoryList, reqBannerList, reqFloorList, reqGetSearchInfo} from \"../../api\";\r\n\r\nconst state ={\r\n  categoryList:[],\r\n  bannerList:[],\r\n  floorList:[]\r\n};\r\nconst mutations = {\r\n  CATEGORYLIST(state,categoryList){\r\n    state.categoryList = categoryList\r\n    //console.log(state.categoryList);\r\n  },\r\n  GETBANNERLIST(state,bannerList){\r\n    state.bannerList = bannerList\r\n  },\r\n  GETFLOORLIST(state,floorList){\r\n    state.floorList = floorList\r\n  }\r\n};\r\nconst actions = {\r\n  async categoryList({commit},params={}){\r\n    let result = await reqGetSearchInfo(params);\r\n    console.log(result)\r\n    if (result.status==200){\r\n      commit('CATEGORYLIST',result.data.data)\r\n    }\r\n  },\r\n  //获取首页轮播图数据\r\n  async getBannerList({commit}){\r\n    let result = await reqBannerList();\r\n    //console.log(result);\r\n    if (result.status == 200){\r\n      commit('GETBANNERLIST',result.data.data)\r\n    }\r\n  },\r\n  //获取floor数据\r\n  async getFloorList({commit}){\r\n    let result = await reqFloorList();\r\n    if (result.status == 200){\r\n      commit('GETFLOORLIST',result.data.data)\r\n    }\r\n  }\r\n};\r\nconst getters = {};\r\nexport default {\r\n  state,\r\n  mutations,\r\n  actions,\r\n  getters\r\n}"]},"metadata":{},"sourceType":"module"}