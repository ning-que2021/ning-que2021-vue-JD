{"ast":null,"code":"import _asyncToGenerator from \"D:/my-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\n//小仓库\nimport { reqCategoryList, reqBannerList } from \"../../api\";\nvar state = {\n  categoryList: [],\n  bannerList: []\n};\nvar mutations = {\n  CATEGORYLIST: function CATEGORYLIST(state, categoryList) {\n    state.categoryList = categoryList; //console.log(state.categoryList);\n  }\n};\nvar actions = {\n  categoryList: function categoryList(_ref) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return reqCategoryList();\n\n            case 3:\n              result = _context.sent;\n\n              //console.log(result)\n              if (result.status == 200) {\n                commit('CATEGORYLIST', result.data.data);\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  //获取首页轮播图数据\n  getBannerList: function getBannerList(_ref2) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit;\n              _context2.next = 3;\n              return reqBannerList();\n\n            case 3:\n              result = _context2.sent;\n              console.log(result);\n\n              if (result.code == 200) {\n                commit('GETBANNERLIST', result.data);\n              }\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  }\n};\nvar getters = {};\nexport default {\n  state: state,\n  mutations: mutations,\n  actions: actions,\n  getters: getters\n};","map":{"version":3,"sources":["D:/my-app/src/store/home/index.js"],"names":["reqCategoryList","reqBannerList","state","categoryList","bannerList","mutations","CATEGORYLIST","actions","commit","result","status","data","getBannerList","console","log","code","getters"],"mappings":";;AAAA;AACA,SAAQA,eAAR,EAAwBC,aAAxB,QAA4C,WAA5C;AAEA,IAAMC,KAAK,GAAE;AACXC,EAAAA,YAAY,EAAC,EADF;AAEXC,EAAAA,UAAU,EAAC;AAFA,CAAb;AAIA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,YADgB,wBACHJ,KADG,EACGC,YADH,EACgB;AAC9BD,IAAAA,KAAK,CAACC,YAAN,GAAqBA,YAArB,CAD8B,CAE9B;AACD;AAJe,CAAlB;AAMA,IAAMI,OAAO,GAAG;AACRJ,EAAAA,YADQ,8BACc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAARK,cAAAA,MAAQ,QAARA,MAAQ;AAAA;AAAA,qBACPR,eAAe,EADR;;AAAA;AACtBS,cAAAA,MADsB;;AAE1B;AACA,kBAAIA,MAAM,CAACC,MAAP,IAAe,GAAnB,EAAuB;AACrBF,gBAAAA,MAAM,CAAC,cAAD,EAAgBC,MAAM,CAACE,IAAP,CAAYA,IAA5B,CAAN;AACD;;AALyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAM3B,GAPa;AAQd;AACMC,EAAAA,aATQ,gCASe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAARJ,cAAAA,MAAQ,SAARA,MAAQ;AAAA;AAAA,qBACRP,aAAa,EADL;;AAAA;AACvBQ,cAAAA,MADuB;AAE3BI,cAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;;AACA,kBAAIA,MAAM,CAACM,IAAP,IAAe,GAAnB,EAAuB;AACrBP,gBAAAA,MAAM,CAAC,eAAD,EAAiBC,MAAM,CAACE,IAAxB,CAAN;AACD;;AAL0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAM5B;AAfa,CAAhB;AAiBA,IAAMK,OAAO,GAAG,EAAhB;AACA,eAAe;AACbd,EAAAA,KAAK,EAALA,KADa;AAEbG,EAAAA,SAAS,EAATA,SAFa;AAGbE,EAAAA,OAAO,EAAPA,OAHa;AAIbS,EAAAA,OAAO,EAAPA;AAJa,CAAf","sourcesContent":["//小仓库\r\nimport {reqCategoryList,reqBannerList} from \"../../api\";\r\n\r\nconst state ={\r\n  categoryList:[],\r\n  bannerList:[]\r\n};\r\nconst mutations = {\r\n  CATEGORYLIST(state,categoryList){\r\n    state.categoryList = categoryList\r\n    //console.log(state.categoryList);\r\n  }\r\n};\r\nconst actions = {\r\n  async categoryList({commit}){\r\n    let result = await reqCategoryList();\r\n    //console.log(result)\r\n    if (result.status==200){\r\n      commit('CATEGORYLIST',result.data.data)\r\n    }\r\n  },\r\n  //获取首页轮播图数据\r\n  async getBannerList({commit}){\r\n    let result = await reqBannerList();\r\n    console.log(result);\r\n    if (result.code == 200){\r\n      commit('GETBANNERLIST',result.data)\r\n    }\r\n  }\r\n};\r\nconst getters = {};\r\nexport default {\r\n  state,\r\n  mutations,\r\n  actions,\r\n  getters\r\n}"]},"metadata":{},"sourceType":"module"}