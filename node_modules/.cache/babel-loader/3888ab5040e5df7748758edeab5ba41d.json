{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.error.cause.js\";\n// 这份文件就是用来做拦截的\nimport axios from 'axios'; //引入进度条\n\nimport nprogress from \"nprogress\"; //进度条样式\n\nimport 'nprogress/nprogress.css';\nimport store from \"../store\"; // 创建一个单例（实例）\n\nvar requests = axios.create({\n  baseURL: '/api',\n  timeout: 5000\n}); // 拦截器 - 请求拦截\n\nrequests.interceptors.request.use(function (config) {\n  // 部分接口需要拿到token\n  if (store.state.detail.uuid_token) {\n    //请求头添加一个字段，和后台老师商量好的\n    config.headers.userTempId = store.state.detail.uuid_token;\n  } //需要带token给服务器\n\n\n  if (store.state.user.token) {\n    config.headers.token = store.state.user.token;\n  } //进度条开始动\n\n\n  nprogress.start();\n  return config;\n}, function (err) {\n  return Promise.reject(err);\n}); // 拦截器 - 响应拦截\n\nrequests.interceptors.response.use(function (res) {\n  //进度条结束\n  nprogress.done();\n  return res;\n}, function (error) {\n  return Promise.reject(new Error('faile'));\n}); // 整体导出\n\nexport default requests;","map":null,"metadata":{},"sourceType":"module"}