{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\n// 这份文件就是用来做拦截的\nimport axios from 'axios'; //引入进度条\n\nimport nprogress from \"nprogress\"; //进度条样式\n\nimport 'nprogress/nprogress.css';\nimport store from \"../store\"; // 创建一个单例（实例）\n\nvar requests = axios.create({\n  baseURL: '/api',\n  timeout: 5000\n}); // 拦截器 - 请求拦截\n\nrequests.interceptors.request.use(function (config) {\n  // 部分接口需要拿到token\n  if (store.state.detail.uuid_token) {\n    //请求头添加一个字段，和后台老师商量好的\n    config.headers.userTempId = store.state.detail.uuid_token;\n  } //进度条开始动\n\n\n  nprogress.start();\n  return config;\n}, function (err) {\n  return Promise.reject(err);\n}); // 拦截器 - 响应拦截\n\nrequests.interceptors.response.use(function (res) {\n  //进度条结束\n  nprogress.done();\n  return res;\n}, function (err) {\n  return Promise.reject(err);\n}); // 整体导出\n\nexport default requests;","map":{"version":3,"sources":["D:/my-app/src/api/request.js"],"names":["axios","nprogress","store","requests","create","baseURL","timeout","interceptors","request","use","config","state","detail","uuid_token","headers","userTempId","start","err","Promise","reject","response","res","done"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,WAAtB,C,CACA;;AACA,OAAO,yBAAP;AACA,OAAOC,KAAP,MAAkB,UAAlB,C,CAGA;;AACA,IAAMC,QAAQ,GAAGH,KAAK,CAACI,MAAN,CAAa;AAC5BC,EAAAA,OAAO,EAAE,MADmB;AAE5BC,EAAAA,OAAO,EAAE;AAFmB,CAAb,CAAjB,C,CAKA;;AACAH,QAAQ,CAACI,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CAAkC,UAACC,MAAD,EAAY;AAC5C;AACA,MAAIR,KAAK,CAACS,KAAN,CAAYC,MAAZ,CAAmBC,UAAvB,EAAmC;AACjC;AACAH,IAAAA,MAAM,CAACI,OAAP,CAAeC,UAAf,GAA4Bb,KAAK,CAACS,KAAN,CAAYC,MAAZ,CAAmBC,UAA/C;AACD,GAL2C,CAM5C;;;AACAZ,EAAAA,SAAS,CAACe,KAAV;AACA,SAAON,MAAP;AACD,CATD,EASG,UAAAO,GAAG,EAAI;AACR,SAAOC,OAAO,CAACC,MAAR,CAAeF,GAAf,CAAP;AACD,CAXD,E,CAcA;;AACAd,QAAQ,CAACI,YAAT,CAAsBa,QAAtB,CAA+BX,GAA/B,CAAmC,UAAAY,GAAG,EAAI;AACxC;AACApB,EAAAA,SAAS,CAACqB,IAAV;AACA,SAAOD,GAAP;AACD,CAJD,EAIG,UAAAJ,GAAG,EAAI;AACR,SAAOC,OAAO,CAACC,MAAR,CAAeF,GAAf,CAAP;AACD,CAND,E,CAQA;;AACA,eAAed,QAAf","sourcesContent":["// 这份文件就是用来做拦截的\r\nimport axios from 'axios'\r\n//引入进度条\r\nimport nprogress from \"nprogress\";\r\n//进度条样式\r\nimport 'nprogress/nprogress.css'\r\nimport store from \"../store\";\r\n\r\n\r\n// 创建一个单例（实例）\r\nconst requests = axios.create({\r\n  baseURL: '/api',\r\n  timeout: 5000\r\n})\r\n\r\n// 拦截器 - 请求拦截\r\nrequests.interceptors.request.use((config) => {\r\n  // 部分接口需要拿到token\r\n  if (store.state.detail.uuid_token) {\r\n    //请求头添加一个字段，和后台老师商量好的\r\n    config.headers.userTempId = store.state.detail.uuid_token\r\n  }\r\n  //进度条开始动\r\n  nprogress.start();\r\n  return config;\r\n}, err => {\r\n  return Promise.reject(err)\r\n});\r\n\r\n\r\n// 拦截器 - 响应拦截\r\nrequests.interceptors.response.use(res => {\r\n  //进度条结束\r\n  nprogress.done();\r\n  return res;\r\n}, err => {\r\n  return Promise.reject(err)\r\n});\r\n\r\n// 整体导出\r\nexport default requests;"]},"metadata":{},"sourceType":"module"}