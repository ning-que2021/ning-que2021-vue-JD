{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"Pagination\",\n  props: ['pageNo', 'pageSize', 'total', 'continues'],\n  computed: {\n    //总共多少页\n    totalPage: function totalPage() {\n      //向上取整\n      return Math.ceil(this.total / this.pageSize);\n    },\n    //计算出连续的页码的起始数字与结束数字【连续页码的数字至少是5 】\n    startNumAndEndNum: function startNumAndEndNum() {\n      var pageNo = this.pageNo,\n          continues = this.continues,\n          totalPage = this.totalPage; //先定义两个变量存储起始数字与结束数字\n\n      var start = 0,\n          end = 0; //连续页码数字5【就是至少5页】，如果出现不正常现象【就是不够5页】\n      //不正常现象【总页数没有了连续页码多】\n\n      if (continues > totalPage) {\n        start = 1;\n        end = totalPage;\n      } else {\n        //正常现象【连续页码数字是5，总页数一定是大于5】\n        start = pageNo - parseInt(continues / 2);\n        end = pageNo + parseInt(continues / 2); //把出现不正常现象【start数字出现0】纠正\n\n        if (start < 1) {\n          start = 1; //end是连续的页码数\n\n          end = continues;\n        } //把出现不正常现象【end数字总数大于总页码】纠正\n\n\n        if (end > totalPage) {\n          end = totalPage;\n          start = totalPage - continues + 1;\n        }\n      }\n\n      return {\n        start: start,\n        end: end\n      };\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;AAkBA;AACAA,oBADA;AAEAC,qDAFA;AAGAC;AACA;AACAC,aAFA,uBAEA;AACA;AACA;AACA,KALA;AAMA;AACAC,qBAPA,+BAOA;AACA;AAAA;AAAA,qCADA,CAEA;;AACA;AAAA,kBAHA,CAIA;AACA;;AACA;AACAC;AACAC;AACA,OAHA,MAGA;AACA;AACAD;AACAC,+CAHA,CAIA;;AACA;AACAD,oBADA,CAEA;;AACAC;AACA,SATA,CAUA;;;AACA;AACAA;AACAD;AACA;AACA;;AACA;AAAAA;AAAAC;AAAA;AACA;AAjCA;AAHA","names":["name","props","computed","totalPage","startNumAndEndNum","start","end"],"sourceRoot":"src/components/Pagination","sources":["index.vue"],"sourcesContent":["<template>\r\n  <div class=\"pagination\">\r\n    <button :disabled=\"pageNo==1\" @click=\"$emit('getPageNo',pageNo-1)\">上一页</button>\r\n    <button v-if=\"startNumAndEndNum.start > 1\" @click=\"$emit('getPageNo',1)\">1</button>\r\n    <button v-if=\"startNumAndEndNum.start > 2\">···</button>\r\n<!--      中间部分-->\r\n    <button v-for=\"(page,index) in startNumAndEndNum.end\" :key=\"index\" v-if=\"page>=startNumAndEndNum.start\">{{page}}</button>\r\n\r\n\r\n    <button v-if=\"startNumAndEndNum.end < totalPage - 1\">···</button>\r\n    <button v-if=\"startNumAndEndNum.end < totalPage\">{{ totalPage }}</button>\r\n    <button>下一页</button>\r\n\r\n    <button style=\"margin-left: 30px\">共 {{ total }} 条</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"Pagination\",\r\n  props:['pageNo','pageSize','total','continues'],\r\n  computed:{\r\n    //总共多少页\r\n    totalPage(){\r\n      //向上取整\r\n      return Math.ceil(this.total/this.pageSize)\r\n    },\r\n    //计算出连续的页码的起始数字与结束数字【连续页码的数字至少是5 】\r\n    startNumAndEndNum(){\r\n      const {pageNo,continues,totalPage} = this\r\n      //先定义两个变量存储起始数字与结束数字\r\n      let start = 0 , end = 0 ;\r\n      //连续页码数字5【就是至少5页】，如果出现不正常现象【就是不够5页】\r\n      //不正常现象【总页数没有了连续页码多】\r\n      if (continues > totalPage){\r\n        start = 1;\r\n        end = totalPage;\r\n      }else {\r\n        //正常现象【连续页码数字是5，总页数一定是大于5】\r\n        start = pageNo - parseInt(continues / 2);\r\n        end = pageNo + parseInt(continues / 2);\r\n        //把出现不正常现象【start数字出现0】纠正\r\n        if (start < 1){\r\n          start = 1;\r\n          //end是连续的页码数\r\n          end = continues;\r\n        }\r\n        //把出现不正常现象【end数字总数大于总页码】纠正\r\n        if (end > totalPage){\r\n          end = totalPage;\r\n          start = totalPage - continues + 1;\r\n        }\r\n      }\r\n      return {start,end}\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.pagination {\r\n  text-align: center;\r\n  button {\r\n    margin: 0 5px;\r\n    background-color: #f4f4f5;\r\n    color: #606266;\r\n    outline: none;\r\n    border-radius: 2px;\r\n    padding: 0 4px;\r\n    vertical-align: top;\r\n    display: inline-block;\r\n    font-size: 13px;\r\n    min-width: 35.5px;\r\n    height: 28px;\r\n    line-height: 28px;\r\n    cursor: pointer;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    border: 0;\r\n\r\n    &[disabled] {\r\n      color: #c0c4cc;\r\n      cursor: not-allowed;\r\n    }\r\n\r\n    &.active {\r\n      cursor: not-allowed;\r\n      background-color: #409eff;\r\n      color: #fff;\r\n    }\r\n  }\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}