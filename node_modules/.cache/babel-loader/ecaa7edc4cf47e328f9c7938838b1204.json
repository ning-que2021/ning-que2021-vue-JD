{"ast":null,"code":"import _asyncToGenerator from \"D:/my-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.error.cause.js\";\n//登录与注册的模块\nimport { reqGetCode, reqUserRegister, reqUserLogin } from \"@/api\";\nvar state = {\n  code: '',\n  token: ''\n};\nvar mutations = {\n  GETCODE: function GETCODE(state, code) {\n    state.code = code;\n  },\n  USERLOGIN: function USERLOGIN(state, token) {\n    state.token = token;\n  }\n};\nvar actions = {\n  getCode: function getCode(_ref, phone) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return reqGetCode(phone);\n\n            case 3:\n              result = _context.sent;\n              console.log(result.data.data);\n\n              if (!(result.data.code == 200)) {\n                _context.next = 10;\n                break;\n              }\n\n              commit('GETCODE', result.data.data);\n              return _context.abrupt(\"return\", 'ok');\n\n            case 10:\n              return _context.abrupt(\"return\", Promise.reject(new Error('faile')));\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  //用户注册\n  userRegister: function userRegister(_ref2, user) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit;\n              _context2.next = 3;\n              return reqUserRegister(user);\n\n            case 3:\n              result = _context2.sent;\n\n              if (!(result.data.code == 200)) {\n                _context2.next = 8;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", 'ok');\n\n            case 8:\n              return _context2.abrupt(\"return\", Promise.reject(new Error('faile')));\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  },\n  //登录【token】\n  userLogin: function userLogin(_ref3, data) {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              commit = _ref3.commit;\n              _context3.next = 3;\n              return reqUserLogin(data);\n\n            case 3:\n              result = _context3.sent;\n              console.log(result.data.data);\n\n              if (!(result.data.code == 200)) {\n                _context3.next = 10;\n                break;\n              }\n\n              commit('USERLOGIN', _this.data.data);\n              return _context3.abrupt(\"return\", 'ok');\n\n            case 10:\n              return _context3.abrupt(\"return\", Promise.reject(new Error('faile')));\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))();\n  }\n};\nvar getters = {};\nexport default {\n  state: state,\n  mutations: mutations,\n  actions: actions,\n  getters: getters\n};","map":{"version":3,"sources":["D:/my-app/src/store/user/index.js"],"names":["reqGetCode","reqUserRegister","reqUserLogin","state","code","token","mutations","GETCODE","USERLOGIN","actions","getCode","phone","commit","result","console","log","data","Promise","reject","Error","userRegister","user","userLogin","getters"],"mappings":";;;;AAAA;AACA,SAAQA,UAAR,EAAmBC,eAAnB,EAAmCC,YAAnC,QAAsD,OAAtD;AAGA,IAAMC,KAAK,GAAG;AACZC,EAAAA,IAAI,EAAE,EADM;AAEZC,EAAAA,KAAK,EAAC;AAFM,CAAd;AAKA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,OADgB,mBACRJ,KADQ,EACDC,IADC,EACK;AACnBD,IAAAA,KAAK,CAACC,IAAN,GAAaA,IAAb;AACD,GAHe;AAIhBI,EAAAA,SAJgB,qBAINL,KAJM,EAIAE,KAJA,EAIM;AACpBF,IAAAA,KAAK,CAACE,KAAN,GAAcA,KAAd;AACD;AANe,CAAlB;AASA,IAAMI,OAAO,GAAG;AACRC,EAAAA,OADQ,yBACUC,KADV,EACiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAhBC,cAAAA,MAAgB,QAAhBA,MAAgB;AAAA;AAAA,qBACVZ,UAAU,CAACW,KAAD,CADA;;AAAA;AACzBE,cAAAA,MADyB;AAE7BC,cAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,IAAP,CAAYA,IAAxB;;AAF6B,oBAGzBH,MAAM,CAACG,IAAP,CAAYZ,IAAZ,IAAoB,GAHK;AAAA;AAAA;AAAA;;AAI3BQ,cAAAA,MAAM,CAAC,SAAD,EAAYC,MAAM,CAACG,IAAP,CAAYA,IAAxB,CAAN;AAJ2B,+CAKpB,IALoB;;AAAA;AAAA,+CAOpBC,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAU,OAAV,CAAf,CAPoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAS9B,GAVa;AAWd;AACMC,EAAAA,YAZQ,+BAYcC,IAZd,EAYmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAbT,cAAAA,MAAa,SAAbA,MAAa;AAAA;AAAA,qBACZX,eAAe,CAACoB,IAAD,CADH;;AAAA;AAC3BR,cAAAA,MAD2B;;AAAA,oBAG3BA,MAAM,CAACG,IAAP,CAAYZ,IAAZ,IAAoB,GAHO;AAAA;AAAA;AAAA;;AAAA,gDAItB,IAJsB;;AAAA;AAAA,gDAMtBa,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAU,OAAV,CAAf,CANsB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQhC,GApBa;AAqBd;AACMG,EAAAA,SAtBQ,4BAsBWN,IAtBX,EAsBgB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAbJ,cAAAA,MAAa,SAAbA,MAAa;AAAA;AAAA,qBACTV,YAAY,CAACc,IAAD,CADH;;AAAA;AACxBH,cAAAA,MADwB;AAE5BC,cAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,IAAP,CAAYA,IAAxB;;AAF4B,oBAGxBH,MAAM,CAACG,IAAP,CAAYZ,IAAZ,IAAkB,GAHM;AAAA;AAAA;AAAA;;AAI1BQ,cAAAA,MAAM,CAAC,WAAD,EAAa,KAAI,CAACI,IAAL,CAAUA,IAAvB,CAAN;AAJ0B,gDAKnB,IALmB;;AAAA;AAAA,gDAOnBC,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAU,OAAV,CAAf,CAPmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAS7B;AA/Ba,CAAhB;AAmCA,IAAMI,OAAO,GAAG,EAAhB;AAEA,eAAe;AACbpB,EAAAA,KAAK,EAALA,KADa;AAEbG,EAAAA,SAAS,EAATA,SAFa;AAGbG,EAAAA,OAAO,EAAPA,OAHa;AAIbc,EAAAA,OAAO,EAAPA;AAJa,CAAf","sourcesContent":["//登录与注册的模块\r\nimport {reqGetCode,reqUserRegister,reqUserLogin} from \"@/api\";\r\n\r\n\r\nconst state = {\r\n  code: '',\r\n  token:''\r\n};\r\n\r\nconst mutations = {\r\n  GETCODE(state, code) {\r\n    state.code = code\r\n  },\r\n  USERLOGIN(state,token){\r\n    state.token = token\r\n  }\r\n};\r\n\r\nconst actions = {\r\n  async getCode({commit}, phone) {\r\n    let result = await reqGetCode(phone);\r\n    console.log(result.data.data);\r\n    if (result.data.code == 200) {\r\n      commit('GETCODE', result.data.data);\r\n      return 'ok'\r\n    } else {\r\n      return Promise.reject(new Error('faile'))\r\n    }\r\n  },\r\n  //用户注册\r\n  async userRegister({commit},user){\r\n    let result = await reqUserRegister(user);\r\n    //console.log(result);\r\n    if (result.data.code == 200){\r\n      return 'ok'\r\n    }else {\r\n      return Promise.reject(new Error('faile'))\r\n    }\r\n  },\r\n  //登录【token】\r\n  async userLogin({commit},data){\r\n    let result = await reqUserLogin(data);\r\n    console.log(result.data.data);\r\n    if (result.data.code==200){\r\n      commit('USERLOGIN',this.data.data)\r\n      return 'ok'\r\n    }else {\r\n      return Promise.reject(new Error('faile'))\r\n    }\r\n  }\r\n};\r\n\r\n\r\nconst getters = {};\r\n\r\nexport default {\r\n  state,\r\n  mutations,\r\n  actions,\r\n  getters\r\n}"]},"metadata":{},"sourceType":"module"}