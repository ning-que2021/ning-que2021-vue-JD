{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport { reqCarList, reqDeleteCartById, reqUpdateCheckedById } from \"../../api\";\nconst state = {\n  cartList: []\n};\nconst mutations = {\n  GETCARTLIST(state, cartList) {\n    state.cartList = cartList;\n  }\n\n};\nconst actions = {\n  //获取购物车列表数据\n  async getCartList({\n    commit\n  }) {\n    let result = await reqCarList(); //console.log(result);\n\n    if (result.status == 200) {\n      commit('GETCARTLIST', result.data.data);\n    }\n  },\n\n  //删除购物车某一个产品\n  async deleteCartListBySkuId({\n    commit\n  }, skuId) {\n    let result = await reqDeleteCartById(skuId); //console.log(result);\n\n    if (result.status == 200) {\n      return 'ok';\n    } else {\n      return Promise.reject(new Error('faile'));\n    }\n  },\n\n  //修改购物车某一个产品的选中状态\n  async updateCheckedById({\n    commit\n  }, {\n    skuId,\n    isChecked\n  }) {\n    let result = await reqUpdateCheckedById(skuId, isChecked);\n\n    if (result.data.code == 200) {\n      return \"ok\";\n    } else {\n      return Promise.reject(new Error(\"faile\"));\n    }\n  },\n\n  //删除全部选中的商品\n  deleteAllCheckedCart({\n    dispatch,\n    getters\n  }) {\n    //context:小仓库\n    //获取购物车中全部的商品【是一个数组】\n    let PromiseAll = [];\n    getters.cartList.cartInfoList.forEach(item => {\n      let promise = item.isChecked == 1 ? dispatch('deleteCartListBySkuId', item.skuId) : ''; //将每一次返回的promise添加到数组中\n\n      PromiseAll.push(promise);\n    }); //只要全部的p1,p2...都成功，返回结果即为成功，\n    //如果有一个失败，返回的即为失败结果\n\n    return Promise.all(PromiseAll);\n  },\n\n  //修改产品全选状态\n  updateAllCartIsChecked({\n    dispatch,\n    state\n  }, isChecked) {\n    let promiseAll = [];\n    state.cartList[0].cartInfoList.forEach(item => {\n      let promise = dispatch('updateCheckedById', {\n        skuId: item.skuId,\n        isChecked\n      });\n      promiseAll.push(promise);\n    });\n    return Promise.all(promiseAll);\n  }\n\n};\nconst getters = {\n  cartList(state) {\n    return state.cartList[0] || {};\n  }\n\n};\nexport default {\n  state,\n  mutations,\n  actions,\n  getters\n};","map":null,"metadata":{},"sourceType":"module"}